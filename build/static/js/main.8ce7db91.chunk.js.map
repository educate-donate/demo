{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Educate","props","className","CardDeck","Card","style","width","Body","Title","Text","href","target","Button","variant","Donate","useRouteMatch","path","url","exact","to","DonateTime","DonateMoney","Header","edOrDo","useLocation","pathname","split","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ce7db91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation,\n  useRouteMatch,\n} from \"react-router-dom\";\n\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nfunction Educate (props) {\n    return(\n        <>\n            <p className=\"sectionSubtitle last\">Education is the first step to positive change, hopefully this page will give you some pointers on what you can do to be that change.</p>\n            <div className=\"cardContainer\">\n                <CardDeck>\n                    <Card style={{ width: '18rem' }}>\n                        <Card.Body>\n                            <Card.Title>Protest Safety</Card.Title>\n                            <Card.Text>\n                                Amnesty International's guide to staying safe during protests.\n                            </Card.Text>\n                            <a href=\"https://www.amnestyusa.org/pdfs/SafeyDuringProtest_F.pdf\" target=\"_blank\"><Button variant=\"primary\">Go!</Button></a>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n            </div>\n        </>\n    )\n}\n\nfunction Donate (props) {\n    let { path, url } = useRouteMatch();\n    return(\n        <>\n            <Switch>\n                <Route exact path={path}>\n                    <p className=\"sectionSubtitle\">In a capitalist society such as the one we live in, opressed people are often the people with the least financial resources. If you find yourself in a position to be able to share some of your own financial resources to help others, it will be gratefully received.</p>\n                    <p className=\"sectionSubtitle last\">If you are not in a position to donate money, please consider donating some of your time to sign petitions.</p>\n                    <div className=\"cardContainer\">\n                        <CardDeck>\n                            <Card style={{ width: '18rem' }}>\n                                <Card.Body>\n                                    <Card.Title>Time</Card.Title>\n                                    <Card.Text>\n                                        Donate your time by signing petitions and contacting politicians/authorities.\n                                    </Card.Text>\n                                    <Link to={`${url}/time`}><Button variant=\"primary\">Get Started</Button></Link>\n                                </Card.Body>\n                            </Card>\n                            <Card style={{ width: '18rem' }}>\n                                <Card.Body>\n                                    <Card.Title>Money</Card.Title>\n                                    <Card.Text>\n                                        Donate your money to fundraisers acting for the benefit of the people.\n                                    </Card.Text>\n                                    <Link to={`${url}/fundraisers`}><Button variant=\"primary\">Get Started</Button></Link>\n                                </Card.Body>\n                            </Card>\n                        </CardDeck>\n                    </div>\n                </Route>\n                <Route path={`${path}/time`}>\n                    <>\n                        <p className=\"sectionSubtitle\">Donating your time to sign petitions and contact politicians/authorities is an extremely important part in raising the general public awareness of oppression.</p>\n                        <DonateTime/>\n                    </>\n                </Route>\n                <Route path={`${path}/fundraisers`}>\n                    <>\n                        <p className=\"sectionSubtitle\">Donating money can give people on the frontline the extra resources they need to keep activism alive.</p>\n                        <DonateMoney/>\n                    </>\n                </Route>\n            </Switch>\n        </>\n    )\n}\n\nfunction DonateTime (props) {\n    return(\n        <div className=\"cardContainer\">\n            <CardDeck>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>Example Petition</Card.Title>\n                        <Card.Text>\n                            Donate your time by signing petitions and contacting politicians/authorities.\n                        </Card.Text>\n                        <Link to={``}><Button variant=\"primary\">Go To Petition</Button></Link>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>Example Petition 2</Card.Title>\n                        <Card.Text>\n                            Donate your time by signing petitions and contacting politicians/authorities.\n                        </Card.Text>\n                        <Link to={``}><Button variant=\"primary\">Go To Petition</Button></Link>\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n        </div>\n    )\n}\n\nfunction DonateMoney (props) {\n    return(\n        <div className=\"cardContainer\">\n            <CardDeck>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>Example Fundraiser</Card.Title>\n                        <Card.Text>\n                            Donate your time by signing petitions and contacting politicians/authorities.\n                        </Card.Text>\n                        <Link to={``}><Button variant=\"primary\">Go To Fundraiser</Button></Link>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>Example Fundraiser 2</Card.Title>\n                        <Card.Text>\n                            Donate your money to fundraisers acting for the benefit of the people.\n                        </Card.Text>\n                        <Link to={``}><Button variant=\"primary\">Go To Fundraiser</Button></Link>\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n        </div>\n    )\n}\n\nfunction Header (props) {\n    let location = useLocation();\n    let edOrDo = location.pathname.split(\"/\")[1];\n    return(\n        <>\n            <header className=\"App-header\">\n                <Link to=\"/educate\" id=\"educateHeader\"><span className={(edOrDo === \"educate\") ? \"headerText selected\" : \"headerText\"}>EDUCATE</span></Link>\n                <Link to=\"/donate\" id=\"donateHeader\"><span className={(edOrDo === \"donate\") ? \"headerText selected\" : \"headerText\"}>DONATE</span></Link>\n            </header>\n            <div id=\"google_translate_element\"></div>\n        </>\n    )\n}\n\nfunction App () {\n    return (\n        <Router>\n            <div className=\"App\">\n                <div className=\"content\">\n                    <Switch>\n                        <Route path=\"/educate\">\n                            <>\n                                <Header/>\n                                <Educate />\n                            </>\n                        </Route>\n                        <Route path=\"/donate\">\n                            <>\n                                <Header/>\n                                <Donate />\n                            </>\n                        </Route>\n                        <Route path=\"/\">\n                            <>\n                                <Header />\n                            </>\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Importing Sass with Bootstrap CSS\nimport './App.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}